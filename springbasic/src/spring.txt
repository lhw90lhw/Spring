1. 프레임워크 개요
	=> 완성된 소프트웨어가 아니라 어떤 문제를 해결하기 위해서 제공되는 잘 설계된 모듈이다.
	재사용이 가능한 모듈이며 일반적으로 프레임워크 기1반으로 공통의 작업은 프레임워크에서 제공해주는
	기능을 이용하여 시스템을 구축할 수 있다. 따라서 신뢰성있는 프로그램을 작성할 수 있으며 유지보수나 개발을
	위해 필요한 시간이나 노력을 절약할 수 있다.
	공통으로 제공되는 모듈은 어떤 시스템을 누가 개발을 하더라도 수정하지 않고 개발할 수 있도록 잘 설계되어 있다.
	
2. Sping의 특징
	- 경량의 시스템
	- POJO(Plain Old Java Object)의 형태로 개발
	- IoC를 지원
	* 의존성 주입.. 즉, 시스템(프로젝트) 내부에서 사용하는 객체를 생성하고 객체의 라이프 사이클을
	관리하는 클래스들이 존재하며 이를 컨테이너라고 한다. 이러한 컨테이너를 통해서 필요한 것에서
	객체를 전달받아 사용할 수 있다.
	객체의 정보는 스프링설정파일, 어노테이션, bean파일(일반클래스)에 등록하면 컨테이너가 그 정보를
	파악해서 객체를 생성한 뒤, 필요한 곳에 전달해주는 메커니즘이 적용되어 있다.
	
	* 스프링은 IoC를 통해서 어플리케이션의 커플링을 낮게 만들어준다.
	제어의 역행이라는 것은 객체를 생성하고 객체의 lifecycle을 제어한다는 것을 의미
	
	* 적절한 위치에서 컨테이너에게 위임해서 처리하도록 하는 방법
	   스프링은 결합도를 낮추기 위해 객체에 대한 모든 작업을 컨테이너가 관리하도록 하며, 이를 지원하는
	   컨테이너가 다양하게 지원된다.
	
	* IoC의 유형
		1) DL(Dependency Lookup)
			: 컨테이너가 callback메소드를 통해 제공하는 기능을 이용해 객체를 찾아서 넘겨주는 것
		2) DI(Dependency Injection)
			=> Constructor Injection : 생성자를 통해서 객체를 주입받는 방식
			   Setter Injection : setter메소드를 통해서 주입받는 방식
		
	
3. POJO class = DTO(Data Transfer Object) class,
				VO(Value Object) class